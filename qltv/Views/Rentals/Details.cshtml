@model qltv.Models.Rental

@{
	ViewBag.Title = "Details";
	Layout = "~/Views/Shared/_Layout.cshtml";
}

<div id="rentailDetail">
	@if (TempData["Message"] != null)
	{
		<div class="alert alert-success">
			<strong>@TempData["Message"]</strong>
		</div>
	}
	<h2>Thông tin phiếu thuê</h2>
	<hr />
	<dl class="dl-horizontal">
		<div class="row">
			<div class="col-md-6">
				<dl class="dl-horizontal">
					<dt>
						Khách hàng
					</dt>
					<dd>
						@Html.DisplayFor(model => model.Customer.Phone)
					</dd>

					<dt>
						Ngày mượn
					</dt>
					<dd>
						@Html.DisplayFor(model => model.DateCreate)
					</dd>

					<dt>
						Ngày trả
					</dt>
					<dd>
						@Html.DisplayFor(model => model.DateReturn)
					</dd>
				</dl>
			</div>
			<div class="col-md-6">
				<dl class="dl-horizontal">
					<dt>
						Thành tiền
					</dt>
					<dd>
						@Html.DisplayFor(model => model.Total)
					</dd>
					<dt>
						Giảm giá
					</dt>

					@if (Model.Discount != null)
					{
						<dd>
							@Html.DisplayFor(model => model.Discount)

						</dd>
					}
					else
					{
						<dd>
							0
						</dd>
					}
					<dt>
						Nhân viên thực hiện
					</dt>
					<dd>
						@Html.DisplayFor(model => model.Staff.StaffName)
					</dd>
				</dl>
			</div>
		</div>
	</dl>
	<table id="rentalDetailsTable" class="table table-striped">
		<thead>
			<tr>
				<th>Tên sách</th>
				<th>Số lượng</th>
				<th>Giá thuê</th>
				<th>Thành tiền</th>
			</tr>
		</thead>
		<tbody>
		</tbody>
	</table>
</div>

<p>
	@Html.ActionLink("Back to List", "Index")
	<button onclick="downloadPDF()" class="btn btn-primary">Print Details</button>
</p>

<!-- Include jsPDF from CDN -->
<script src="https://unpkg.com/jspdf-invoice-template@1.3.1/dist/index.js"></script>
@section Scripts {
	<script type="text/javascript">
    function downloadPDF() {
        var props = {
            outputType: jsPDFInvoiceTemplate.OutputType.Save,
            returnJsPDFDocObject: true,
			fileName: `${invoicedetail.rentalid}`,
            orientationLandscape: false,
            logo: {
				src: "https://lh3.googleusercontent.com/a/ACg8ocJzEbOawEY0fouWnCisMn7FLB_u2Dbqdd88qC4Ykq5fumwPsWhC=s360-c-no",
                width: 53.33, // aspect ratio = width/height
                height: 26.66,
                margin: {
                    top: 0, // negative or positive num, from the current position
                    left: 0 // negative or positive num, from the current position
                }
            },
            business: {
                name: "BATOCOM SHOP",
                address: "",
                phone: "",
                email: "",
                email_1: "",
                website: "",
            },
            contact: {
                label: "",
				name: "Khach hang",
				address: `${invoicedetail.customer}`,
                phone: "",
                email: "",
                otherInfo: "",
            },
            invoice: {
                label: "Phieu thue ",
				num: `${invoicedetail.rentalid}`,
                invDate: "Ngay thanh toan: " ,
				invGenDate: `${invoicedetail.datecreate}`,
                headerBorder: false,
                tableBodyBorder: false,
                header: ["#", "Ten sach", "Gia", "So luong", "Thanh tien"],
                table: invoiceitem.map((item, index) => ([
                    index + 1,
                    item.BookName,
                    item.Price,
                    item.Quantity,
                    item.Total
                ])),
                invTotalLabel: "Tong cong:",
				invTotal: `${invoicedetail.rentaltotal}`,
                invCurrency: "",
                row1: {
                    col1: 'Giam gia:',
					col2: `${invoicedetail.discount}`,
                    col3: '',
                    style: {
                        fontSize: 10 

                    }
                },
                row2: {
                    col1: '',
					col2: '',
                    col3: '',
                    style: {
                        fontSize: 10 
                    }
                },
                invDescLabel: "",
                invDesc: "",
            },
            footer: {
                text: "",
            },
            pageEnable: true,
            pageLabel: "Trang ",
        };

        var pdfObject = jsPDFInvoiceTemplate.default(props);
        console.log('complete', pdfObject);
    }

    var invoiceitem = [];
    var invoicedetail = '';

    $(document).ready(function () {
        function getRentalDetail(rentalID) {
            $.ajax({
                url: '@Url.Action("GetRentalDetail", "Rentals")',
                type: "GET",
                data: { id: rentalID },
                success: function (response) {
                    if (response.success) {
                        invoiceitem = response.detail;
                        console.log(invoiceitem);
                        var detailHtml = '';
                        response.detail.forEach(function (detail) {
                            detailHtml += '<tr>';
                            detailHtml += '<td>' + detail.BookName + '</td>';
                            detailHtml += '<td>' + detail.Quantity + '</td>';
                            detailHtml += '<td>' + detail.Price + '</td>';
                            detailHtml += '<td>' + detail.Total + '</td>';
                            detailHtml += '</tr>';
                        });

                        $("#rentalDetailsTable tbody").html(detailHtml);
                    } else {
                        alert(response.message);
                    }
                },
                error: function (xhr, status, error) {
                    console.error("Error retrieving rental details:", status, error);
                    alert('Error retrieving rental details.');
                }
            });
        }
        function getrental(id) {
            $.ajax({
                url: '@Url.Action("GetBillInfo", "Rentals")',
                type: 'GET',
                data: { rentalID: id },
                success: function (response) {
                    if (response.success) {
                        invoicedetail = response;
                        console.log(invoicedetail);
                    } else {
                        alert(response.message);
                    }
                },
                error: function (xhr, status, error) {
                    console.error("Error retrieving bill info:", status, error);
                    alert('Error retrieving bill info.');
                }
            });
        }

        var rentalID = '@Model.RentailID'; // Corrected spelling of RentalID
        if (rentalID) {
            getRentalDetail(rentalID);
            getrental(rentalID);
        }
    });
	</script>
}
